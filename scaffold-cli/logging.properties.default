# Add handlers to the root logger.
# These are inherited by all other loggers.
handlers=java.util.logging.ConsoleHandler
# Adds a file handler, uncomment to log to a file as well filepath can be set below
#handlers=java.util.logging.ConsoleHandler java.util.logging.FileHandler

# Set the logging level of the root logger.
# Levels from lowest to highest are
# FINEST, FINER, FINE, CONFIG, INFO, WARNING and SEVERE.
# The default level for all loggers and handlers is INFO.
# Translation of lsf4j levels to jul levels:
#
# error   | SEVERE
# warning | WARNING
# info    | INFO
# debug   | FINE
# trace   | FINEST


# root logger level
.level = WARNING

# Specify logging levels for specific namespaces.
#edu.udo.scaffoldhunter.model.db.level = FINE
#edu.udo.scaffoldhunter.model.clustering.level = FINEST
#edu.udo.scaffoldhunter.view.level = FINE

# Hibernate logging levels
# http://docs.jboss.org/hibernate/core/3.3/reference/en/html/session-configuration.html#configuration-logging
org.hibernate.level = WARNING
# Log all SQL DML statements as they are executed (set this and all below to WARNING in Release)
org.hibernate.SQL.level = WARNING
# Log all JDBC parameters
org.hibernate.type.level = WARNING
# Log all SQL DDL statements as they are executed
org.hibernate.tool.hbm2ddl = WARNING


# Configure the ConsoleHandler.
# ConsoleHandler uses java.util.logging.SimpleFormatter by default. 
# Even though the root logger has the same level as this,
# the next line is still needed because we're configuring a handler,
# not a logger, and handlers don't inherit properties from the root logger.
java.util.logging.ConsoleHandler.level=FINEST

# Configure the FileHandler
java.util.logging.FileHandler.level=FINEST

# Set log file path and name 
#  %t : system temporary directory
#  %u : unique number to resolve conflicts
java.util.logging.FileHandler.pattern=%t/scaffoldhunter%u.log

# Limiting size of output file in bytes:
java.util.logging.FileHandler.limit=50000

# Style of output (Simple or XML):
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

